@model PaginatedList<Turnero.Models.Turn>
@using Microsoft.AspNetCore.Identity
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Turnos Inicio";
    if (ViewBag.Date == null)
        ViewBag.Date = String.Format("{0:yyyy-MM-dd}", DateTime.Now);
    else
        String.Format("{0:yyyy-MM-dd}", DateTime.Now);
}
<div class="card">
<h1>Turnos</h1>
</div>
<div class="back row">
    <label class="control-label"></label>
    <input id="DateTurn" name="dateTurn" type="date" class="form-control col-lg-2 col-sm-12" style="display:relative" value="@ViewBag.Date" data-date-format="dd/MM/yyyy" />
    <select id="Medics" class="form-control col-lg-2 col-sm-12" asp-items="@(new SelectList(ViewBag.Medics, "Id", "Name"))"></select>
    <button class="btn btn-primary col-md-2 col-sm-12" onclick="SearchTurns('@Url.Action("GetTurns","Turns")')">Buscar</button>
    <button class="btn btn-secondary col-md-2 col-sm-12" onclick="SearchAllTurns('@Url.Action("GetTurns","Turns")')">Limpiar</button>
    @{
        //&& (User.IsInRole("Ingreso"))
        if (SignInManager.IsSignedIn(User))
        {
            <a class="btn btn-info col-md-2 col-sm-12" asp-action="Create">Nuevo Turno</a>
        }
    }
</div>
<table class="back table table-responsive-md">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Dni)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().SocialWork)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Reason)
            </th>
            @{
                if (SignInManager.IsSignedIn(User) && (User.IsInRole("Ingreso")))
                {
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Medic)
                    </th>
                }
            }
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().DateTurn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Time)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="TurnsPartial">
            <partial name="_TurnsPartial" model="@Model" />
    </tbody>
</table>
<div class="container">
    <div class="row">
        @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }
        <ul class="pagination">
            <li class="page-item">
                <a asp-action="Index"
                    asp-route-sortOrder="@ViewData["CurrentSort"]"
                    asp-route-pageNumber="@(Model.PageIndex - 1)"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]"
                    class="page-link btn btn-default @prevDisabled">
                    Anterior
                </a>
            </li>
            <li class="page-item active">
               <span class="page-link">@(Model.PageIndex) </span><span class="sr-only">(current)</span>
            </li>
            <li class="page-item">
                <a asp-action="Index"
                    asp-route-sortOrder="@ViewData["CurrentSort"]"
                    asp-route-pageNumber="@(Model.PageIndex + 1)"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]"
                    class=" page-link btn btn-default @nextDisabled">
                    Siguiente
                </a>
            </li>
        </ul>
    </div>
</div>
    @section scripts{
        <script src="~/js/turn.js"></script>
    }
